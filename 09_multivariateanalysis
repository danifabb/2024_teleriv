# come compattare un dato in una sola dimensione: l'analisi multivariata
# immagini iperspettrali: centinaia di bande. Non si può scegliere 1 banda sola per fare il calcolo come abbiamo fatto l'altra volta (calcolo sd)
# Salvador Dalì voleva rappresentare la quarta dimensione; ipercubo/ croce in quattro dimensioni

# abbiamo variabili che sono correlate tra loro? Possiamo racchiuderle/ compattarle in un'unica dimensione
# grafico con 2 bande correlate tra loro
# analisi delle componenti principali: 2 nuovi assi, PC1 e PC2 (principal components) che spiegano assieme tutta l'informazione 
# PC1 spiega 90% dell'informazione (contiene gran parte del range del dato originario), PC2 spiega l'altro 10% --> posso fare analisi sulla PC1
# se le due bande non sono correlate linearmente, si usano i logaritmi
# temperatura, pressione, pH, quota: non si va da 0 a 255 come per i bit --> bisogna standardizzare dati

library(terra)
library(imageRy)
library(viridis) # for the final plot
im.list()

#importiamo separatamente le 4 bande; so quale banda è quale colore perché in Sentinel è sempre così!
b2 <- im.import("sentinel.dolomites.b2.tif") #blue
b3 <- im.import("sentinel.dolomites.b3.tif") #green
b4 <- im.import("sentinel.dolomites.b4.tif") #red
b8 <- im.import("sentinel.dolomites.b8.tif") #nir

sentdo <- c(b2, b3, b4, b8)
im.plotRGB(sentdo, r=4, g=3, b=2) #nella componente del rosso metto nir, nella componente del verde metto il rosso, nella componente blu metto il verde
im.plotRGB(sentdo, r=3, g=4, b=2) #metto nir su componente verde

pairs(sentdo) #correlazione tra bande (indagine conoscitiva)

# b2 è molto correlata con b3 e b4
# b3 è molto correlata con b2 e b4
# nir ha correlazione con le altre bande ma è minore (0.71)

#four principles for improved statistical ecology (articolo)

# pca (principal components analysis)
pcimage <- im.pca(sentdo) 
# calcolo la percentuale di info racchiusa da pc1
tot <- sum (1481.61084, 637.61487, 41.93585, 29.44661)
1481.61084*100 / tot #67.7%
637.61487*100/tot #29%

viridis <- colorRampPalette(viridis(7))(100)
plot(pcimage, col=viridis) # la prima immagine sarà quella più simile alla singola banda, perché contiene la maggior parte dell'info
plot(pcimage, col=viridis(100)) # per far prima

plot(pcimage, col=plasma(100)) # altra palette già fatta su viridis






