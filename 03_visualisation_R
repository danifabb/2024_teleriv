# satellite data visulisation in R by imageRy
library(terra)
library(imageRy) #tutte le funzioni iniziano con im.
im.list() #lista di dati che abbiamo già caricato nel pacchetto
# importing data
mato <- im.import("matogrosso_ast_2006209_lrg.jpg")
plot(mato)
#abbiamo cambiato idea: plottiamo per prima cosa 1 singola banda (nell'immagine del Mato Grosso ci sono invece direttamente tutte le bande)
b2 <- im.import("sentinel.dolomites.b2.tif") # Tofane; b2 = banda che comprende ciò che riflette nel blu es. acqua
clg <- colorRampPalette(c("black", "grey", "light grey"))(100) # cambiamo la scala di colori; 100 si riferisce alle sfumature tra un colore e l'altro
plot(b2, col=clg)
clcyan <- colorRampPalette(c("magenta", "cyan4", "cyan"))(100)  prendi i colori scrivendo R color names
plot(b2, col=clcyan)
# la roccia riflette anche nel blu, infatti è bianca, ovvero riflette tutto lo spettro 
# la parte viola (riflettanza bassa), che non riflette il blu bensì lo assorbe, è la vegetazione, infatti le foglie assorbono blu e rosso, riflettendo il verde
# riflettanza normalmente va da 0 a 1; per la vegetazione, la riflettanza nel blu è bassa 
# importiamo anche la banda del verde
b3 <- im.import("sentinel.dolomites.b3.tif") # green band
plot(b3, col=clcyan)
b4 <- im.import("sentinel.dolomites.b4.tif") # red band
plot(b4, col=clcyan)
b8 <- im.import("sentinel.dolomites.b8.tif") # NIR band
plot(b8, col=clcyan)

# multiframe: contiene vari grafici assieme; metto 4 bande assieme in un unico plot
par(mfrow=c(2,2)) # 2 righe e 2 colonne che sono parte dello stesso array, quindi uniti da c
plot(b2, col=clcyan)
plot(b3, col=clcyan)
plot(b4, col=clcyan)
plot(b8, col=clcyan)

# aggiungo colore chartreuse a palette
cl4 <- colorRampPalette(c("magenta", "cyan4", "cyan", "chartreuse"))(100)
par(mfrow=c(2,2))
plot(b2, col=cl4)
plot(b3, col=cl4)
plot(b4, col=cl4)
plot(b8, col=cl4)

# plotto 4 immagini una dopo l'altra nella stessa riga
par(mfrow=c(1, 4))
plot(b2, col=cl4)
plot(b3, col=cl4)
plot(b4, col=cl4)
plot(b8, col=cl4)

# stack: singola immagine satellitare con tutte le bande assieme
stacksent <- c(b2, b3, b4, b8)
plot(stacksent, col=cl4)

# singoli elementi selezionati con la parentesi quadra
plot(stacksent[[4]], col=cl4) #2 parentesi quadre, perché voglio sia righe che colonne di pixel (siamo in 2 dimensioni, è una matrice)

plot(stacksent[[4]]) # faccio un subset dello stacksent con solo la quarta banda, ovvero quella dell'infrarosso

# RGB plotting - di solito le bande sono in ordine red green blue
# qui però le bande sono posizionate diversamente:
# stacksent[[1]] = b2 = blue
# stacksent[[2]] = b3 = green
# stacksent[[3]] = b4 = red
# stacksent[[4]] = b8 = near infrared (NIR)

im.plotRGB(stacksent, r=3, g=2, b=1)

# per rendere l'immagine piu chiara sostituisco infrarosso (4) al posto della componente red
# tutto ciò che riflette l'IR diventa rosso
im.plotRGB(stacksent, r=4, g=2, b=1)
# infrarosso potenzia la visione es. vedo una piccola prateria, vedo molto più chiaramente i crepacci

par(mfrow=c(1,2))
im.plotRGB(stacksent, r=3, g=2, b=1)
im.plotRGB(stacksent, r=4, g=2, b=1)

# sostituiamo tutti i pezzi
im.plotRGB(stacksent, 4, 3, 2) # la banda del NIR, che è meno correlata alle altre bande, regola i colori, quindi questa immagine è praticamente uguale a quella di prima

par(mfrow=c(1,3))
im.plotRGB(stacksent, r=3, g=2, b=1)
im.plotRGB(stacksent, r=4, g=2, b=1)
im.plotRGB(stacksent, 4, 3, 2) 

par(mfrow=c(4,1))
im.plotRGB(stacksent, r=3, g=2, b=1)
im.plotRGB(stacksent, 4, 2, 1) #nir on red
im.plotRGB(stacksent, 3, 2, 4) # nir on blue
im.plotRGB(stacksent, 3, 4, 2) # infrarosso al posto del verde: tutto ciò che riflette l'IR diventa verde

# information on correlation between pairs of bands (red vs blue, red vs green, etc.)
# correlation shown through graphs and Pearson's correlation index
pairs(stacksent)

b2

# falsi colori = infrarosso
# cosa sono gli indici spettrali? 
# misurare la biomassa attraverso immagini satellitari attraverso le bande che abbiamo a disposizione








